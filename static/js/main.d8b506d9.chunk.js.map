{"version":3,"sources":["components/mainContainer/mainContainer.s.js","components/header/header.s.js","Utilities/colors.js","Utilities/actions/currencyActionList.js","Utilities/api/currencyApi.js","components/header/buttons/buttons.s.js","localStorage/localStorageHandler.js","components/header/buttons/buttons.jsx","components/header/header.jsx","components/transactionsList/transactionsList.s.js","components/transactionsList/transaction/transactions.s.js","components/transactionsList/transaction/transaction.jsx","components/transactionsList/addingForm/addingForm.s.js","Utilities/dateHandler.js","components/transactionsList/addingForm/addingForm.jsx","components/transactionsList/HeaderCategories/HeaderCategories.s.js","components/transactionsList/HeaderCategories/HeaderCategories.jsx","components/transactionsList/transactionsList.jsx","components/mainContainer/mainContainer.jsx","App.js","serviceWorker.js","Utilities/reducers/rootReducers.js","Utilities/reducers/currencyReducerList.js","index.js"],"names":["ContentWrapper","glamorous","div","display","flexDirection","alignItems","marginTop","HeaderWrapper","width","justifyContent","EuroRateWrapper","background","color","border","concat","borderRadius","height","fontFamily","fontWeight","fontSize","addTransactionToStore","transactions","type","plnRate","fetchApi","fetch","then","res","json","ButtonsWrapper","Button","button","props","deleteModeOn","apply","outline","cursor","transition",":hover","getTransactionsFromStorage","JSON","parse","localStorage","getItem","err","console","log","generateTransactionId","length","id","ButtonsPure","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","arguments","inherits","createClass","key","value","switchDeleteMode","clearIdTable","idsToRemove","idTable","setItem","stringify","filter","transaction","includes","LocalStorage","_this","react_default","a","createElement","onClick","deleteTransactions","cancelDeletion","toogleModal","renderButtons","Component","Buttons","connect","state","isModalOpen","dispatch","HeaderPure","isApiLoading","result","setPlnRate","rates","PLN","toFixed","error","Header","apiLoading","TransactionsListWrapper","marginBottom","Transactions","TransactionsSum","SumWrapper","padding","ModalBackground","position","zIndex","top","left","TransactionWrapper","isDeleteModeOn","transform","shouldBeDeleted","margin","TransactionSpec","borderBottom","longer","overflow","TransactionPure","textAlign","marginRight","euroValue","indexOf","addTransactionIdToDelete","deleteTransactionIdFromTable","transactionDate","transactionName","countPlnValue","Transaction","AddingFormWrapper","form","FromTextarea","textarea","maxHeight","maxWidth","boxShadow","FormInput","input",":focus","setDate","newDate","Date","dayOfTheWeek","getDay","month","getMonth","year","getFullYear","getDate","AddingFormPure","call","transactionValue","event","setState","target","Number","date","name","preventDefault","toConsumableArray","setTransactionDate","_this2","onChange","setTransactionName","placeholder","setTransactionValue","addingForm_s_ButtonsWrapper","addTransaction","closeModal","AddingForm","HeaderCategoriesWrapper","TransactionCategory","ListHeader","TransactionsListPure","map","sum","i","HeaderCategories_ListHeader","renderTransactions","sumTransactionsValue","TransactionsList","MainContainerPure","MainContainer","App","className","Boolean","window","location","hostname","match","rootReducer","combineReducers","undefined","action","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d8b506d9.chunk.js","sourcesContent":["import glamorous from 'glamorous';\r\n\r\nexport const ContentWrapper = glamorous.div({\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n  marginTop: '5%',\r\n})\r\n\r\n// background: #1d2a32;\r\n// rgb(43, 57, 66)","import glamorous from 'glamorous';\r\nimport * as color from '../../Utilities/colors'\r\n\r\nexport const HeaderWrapper = glamorous.div({\r\n  width: '60%', \r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n})\r\n\r\nexport const EuroRateWrapper = glamorous.div({\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  background: color.DarkBlueColor,\r\n  color: color.BrightWhiteColor,\r\n  border: `2px solid ${color.BrightWhiteColor}`,\r\n  borderRadius: '50px',\r\n  height: '35px',\r\n  width: '150px',\r\n  fontFamily: 'Roboto',\r\n  fontWeight: 'bold',\r\n  fontSize: '17',\r\n})","export const BrightWhiteColor = '#bfbfbf'\r\nexport const DarkBlueColor = 'rgb(29,42,50)'\r\n\r\nexport const TransparentDarkBlue = 'rgba(95, 108, 117,.3)'\r\nexport const TransparentBrightColor = 'rgba(221,221,221,.3)'\r\n","export const IS_API_LOADING = 'IS_API_LOADING';\r\nexport const SET_PLN_RATE = 'SET_PLN_RATE';\r\nexport const SWITCH_DELETE_MODE = 'SWITCH_DELETE_MODE'\r\nexport const ADD_TRANSACTION_ID_TO_DELETE = 'ADD_TRANSACTION_ID_TO_DELETE'\r\nexport const DELETE_TRANSACTION_ID_FROM_TABLE = 'DELETE_TRANSACTION_ID_FROM_TABLE'\r\nexport const CLEAR_ID_TABLE = 'CLEAR_ID_TABLE'\r\nexport const ADD_TRANSACTION_TO_STORE = 'ADD_TRANSACTION_TO_STORE'\r\nexport const TOOGLE_MODAL = 'TOOGLE_MODAL'\r\n\r\nexport const isApiLoading = () => ({\r\n  type: IS_API_LOADING\r\n})\r\n\r\nexport const setPlnRate = plnRate => ({\r\n  type: SET_PLN_RATE,\r\n  plnRate\r\n})\r\n\r\nexport const switchDeleteMode = () => ({\r\n  type: SWITCH_DELETE_MODE\r\n})\r\n\r\nexport const addTransactionIdToDelete = id => ({\r\n  type: ADD_TRANSACTION_ID_TO_DELETE,\r\n  id\r\n})\r\n\r\nexport const deleteTransactionIdFromTable = id => ({\r\n  type: DELETE_TRANSACTION_ID_FROM_TABLE,\r\n  id\r\n})\r\n\r\nexport const clearIdTable = id => ({\r\n  type: CLEAR_ID_TABLE,\r\n  id\r\n})\r\n\r\nexport const addTransactionToStore = transactions => ({\r\n  type: ADD_TRANSACTION_TO_STORE,\r\n  transactions\r\n})\r\n\r\nexport const toogleModal = () => ({\r\n  type: TOOGLE_MODAL\r\n})","const getPlnRate = () => {\r\n\r\n  const fetchApi = () => {\r\n    return fetch(`https://api.exchangeratesapi.io/latest/`)\r\n    .then(res => res.json())\r\n  };\r\n\r\n  return {\r\n    fetchApi\r\n  }\r\n};\r\n\r\nexport const plnRate = getPlnRate();","import glamorous from 'glamorous';\r\nimport * as color from '../../../Utilities/colors'\r\n\r\n  export const ButtonsWrapper = glamorous.div({\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    width: '325px',\r\n  })\r\n\r\n  export const Button = glamorous.button(props => {\r\n    return {\r\n      height: '40px',\r\n      width: '150px',\r\n      background: 'transparent',\r\n      border: props.deleteModeOn ? \r\n        props.apply ? '2px solid green' : '2px solid red' : \r\n          `2px solid ${color.BrightWhiteColor}`,\r\n      outline: 'none',\r\n      fontWeight: 'bold',\r\n      color: color.BrightWhiteColor,\r\n      borderRadius: '50px',\r\n      fontSize: '17',\r\n      cursor: 'pointer',\r\n      transition: '.5s',\r\n\r\n      ':hover': {\r\n        background: color.BrightWhiteColor,\r\n        color: color.DarkBlueColor\r\n      }  \r\n    }\r\n  })","export const localStorageInit = () => {\r\n  if (!getTransactionsFromStorage()) {\r\n    localStorage.setItem('transactions', JSON.stringify([]))  \r\n  }\r\n}\r\n\r\nexport const addTransactionToStorage = (name, euroValue, date) => {\r\n  localStorage.setItem('transactions', JSON.stringify([{\r\n      id: getTransactionsFromStorage() && generateTransactionId(), \r\n      transactionName: name, \r\n      euroValue: euroValue,\r\n      transactionDate: date\r\n    },\r\n    ...getTransactionsFromStorage()\r\n    \r\n  ]))\r\n}\r\n\r\nexport const deleteTransactionFromStorage = (idsToRemove) => {\r\n  localStorage.setItem('transactions', JSON.stringify(\r\n    getTransactionsFromStorage().filter(\r\n      transaction => !idsToRemove.includes(transaction.id))\r\n  ))\r\n}\r\n\r\nexport const getTransactionsFromStorage = () => {\r\n  try {\r\n    let transactions = JSON.parse(localStorage.getItem('transactions'))\r\n\r\n    return transactions\r\n  }\r\n  catch (err){\r\n    console.log(err)\r\n  }\r\n} \r\n\r\nexport const generateTransactionId = () => {\r\n  let transactions = getTransactionsFromStorage()\r\n  return transactions.length ? \r\n  transactions[0].id + 1 : 1\r\n}","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { ButtonsWrapper, Button } from './buttons.s';\r\nimport * as LocalStorage from '../../../localStorage/localStorageHandler'\r\nimport { \r\n  switchDeleteMode,\r\n  clearIdTable,\r\n  addTransactionToStore,\r\n  toogleModal } from '../../../Utilities/actions/currencyActionList' \r\n\r\nexport class ButtonsPure extends Component {\r\n\r\n  cancelDeletion() {\r\n    this.props.switchDeleteMode();\r\n    this.props.clearIdTable();\r\n  }\r\n\r\n  deleteTransactions() {\r\n    LocalStorage.deleteTransactionFromStorage(this.props.idTable)\r\n    this.props.addTransactionToStore(LocalStorage.getTransactionsFromStorage())\r\n    this.props.clearIdTable();\r\n    \r\n    this.props.switchDeleteMode()\r\n  }\r\n\r\n  renderButtons() {\r\n    if (this.props.deleteModeOn) {\r\n      return <ButtonsWrapper>\r\n        <Button\r\n          apply={true}\r\n          deleteModeOn={this.props.deleteModeOn}\r\n          onClick={() => this.deleteTransactions()}\r\n        >  \r\n          apply \r\n        </Button>\r\n        <Button \r\n          deleteModeOn={this.props.deleteModeOn}\r\n          apply={false}\r\n          onClick={() => this.cancelDeletion()}\r\n        > \r\n          cancel \r\n        </Button>\r\n      </ButtonsWrapper>\r\n    }\r\n    else {\r\n      return  <ButtonsWrapper>\r\n        <Button\r\n          onClick={() => this.props.toogleModal()}\r\n        > \r\n          new \r\n        </Button>\r\n        <Button \r\n          onClick={() => this.props.switchDeleteMode()}\r\n        > \r\n          delete   \r\n        </Button>\r\n      </ButtonsWrapper>\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      this.renderButtons()\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  deleteModeOn: state.deleteModeOn,\r\n  idTable: state.idTable,\r\n  transaction: state.transactions,\r\n  isModalOpen: state.isModalOpen\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  switchDeleteMode: deleteModeOn => dispatch(switchDeleteMode(deleteModeOn)),\r\n  clearIdTable: id => dispatch(clearIdTable(id)),\r\n  addTransactionToStore: transactions => dispatch(addTransactionToStore(transactions)),\r\n  toogleModal: isModalOpen => dispatch(toogleModal(isModalOpen))\r\n})\r\n\r\nexport const Buttons = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ButtonsPure)","import React, {Component} from 'react';\r\nimport { HeaderWrapper, EuroRateWrapper } from './header.s';\r\nimport { isApiLoading, setPlnRate } from '../../Utilities/actions/currencyActionList'\r\nimport { connect } from 'react-redux';\r\nimport { plnRate } from '../../Utilities/api/currencyApi';\r\nimport { Buttons } from './buttons/buttons';\r\n\r\nexport class HeaderPure extends Component {\r\n\r\n  fetchApi() {\r\n    this.props.isApiLoading();\r\n\r\n    plnRate.fetchApi()\r\n    .then(\r\n      (result) => {\r\n        this.props.setPlnRate(result.rates.PLN.toFixed(2))\r\n        this.props.isApiLoading();  \r\n      },\r\n      (error) => {\r\n        console.log(error)\r\n        this.props.isApiLoading()\r\n      }\r\n    )\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchApi();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <HeaderWrapper>\r\n        <Buttons />\r\n\r\n        <EuroRateWrapper>\r\n          1€ = {this.props.plnRate}PLN\r\n        </EuroRateWrapper>\r\n\r\n      </HeaderWrapper>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  apiLoading: state.apiLoading,\r\n  plnRate: state.plnRate\r\n\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  isApiLoading: apiLoading => dispatch(isApiLoading(apiLoading)),\r\n  setPlnRate: plnRate => dispatch(setPlnRate(plnRate))\r\n});\r\n\r\nexport const Header = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(HeaderPure)","import glamorous from 'glamorous';\r\nimport * as color from '../../Utilities/colors'\r\n\r\nexport const TransactionsListWrapper = glamorous.div({\r\n  marginTop: '15px',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  justifyContent: 'center',\r\n  width: '60%',\r\n  marginBottom: '100px'\r\n})\r\n\r\nexport const Transactions = glamorous.div({\r\n  width: '100%',\r\n})\r\n\r\nexport const TransactionsSum = glamorous.div({\r\n  display: 'flex',\r\n  justifyContent: 'flex-end'\r\n})\r\n\r\nexport const SumWrapper = glamorous.div({\r\n  display: 'flex',\r\n  justifyContent: 'flex-end',\r\n  alignItems: 'center',\r\n  padding: '0 20px',\r\n  height: '80px',\r\n  width: '15.5%',\r\n  color: color.BrightWhiteColor,\r\n})\r\n\r\nexport const ModalBackground = glamorous.div({\r\n  position: 'absolute',\r\n  zIndex:0,\r\n  top: 0,\r\n  left: 0,\r\n  background: 'rgba(0,0,0,.15)',\r\n  height: '100%',\r\n  width: '100%'\r\n})","import glamorous from 'glamorous';\r\nimport * as color from '../../../Utilities/colors'\r\n\r\nexport const TransactionWrapper = glamorous.div(props => {\r\n  return {\r\n    cursor: 'pointer',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    background: props.isDeleteModeOn ? color.TransparentBrightColor : 'transparent',\r\n    transform: props.shouldBeDeleted ? 'scale(0.9)' : null,\r\n    alignItems: 'center',\r\n    margin: props.isDeleteModeOn ? '10px 0 ' : null,\r\n    color: color.BrightWhiteColor,\r\n    transition: '.5s',\r\n\r\n    ':hover': {\r\n      background: color.TransparentDarkBlue\r\n    }\r\n  }\r\n})\r\n\r\nexport const TransactionSpec = glamorous.div(props => {\r\n  return {\r\n    display: 'flex',\r\n    justifyContent:  props.type === 'price' ? 'flex-end' : 'flex-start',\r\n    alignItems: 'center',\r\n    padding: '0 20px',\r\n    borderBottom: `1px solid rgba(95, 108, 117,.1)`,\r\n    width: props.longer === true ? '40%' : '14%',\r\n    height: '80px',\r\n    overflow: 'hidden'\r\n  }\r\n})\r\n\r\nexport const DeleteButton = glamorous.button({\r\n  textAlign: 'center',\r\n  border: 'none',\r\n  outline: 'none',\r\n  width: '20px',\r\n  marginRight: '5px'\r\n})","import React,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {TransactionWrapper, \r\n        TransactionSpec,\r\n      } from './transactions.s';\r\nimport {addTransactionIdToDelete, \r\n        deleteTransactionIdFromTable \r\n      } from '../../../Utilities/actions/currencyActionList';\r\n\r\nexport class TransactionPure extends Component {\r\n  \r\n  countPlnValue() {\r\n    return (this.props.transaction.euroValue * this.props.plnRate).toFixed(2)\r\n  }\r\n\r\n  addTransactionIdToDelete(id) {\r\n    if (this.props.deleteModeOn) {\r\n      if (this.props.idTable.indexOf(id) === -1)\r\n        this.props.addTransactionIdToDelete(id)\r\n      else\r\n        this.props.deleteTransactionIdFromTable(id)\r\n    }\r\n  }\r\n  \r\n  render() {\r\n      const {transaction} = this.props\r\n    return (\r\n      <TransactionWrapper \r\n        onClick={() => this.addTransactionIdToDelete(transaction.id)}\r\n        isDeleteModeOn={this.props.deleteModeOn}\r\n        shouldBeDeleted={this.props.idTable.indexOf(transaction.id) !== -1}\r\n      >\r\n\r\n        <TransactionSpec>\r\n          {transaction.transactionDate}\r\n        </TransactionSpec>\r\n        <TransactionSpec longer={true}> \r\n          {transaction.transactionName} \r\n        </TransactionSpec>\r\n        <TransactionSpec type='price'> \r\n          {transaction.euroValue} EUR\r\n        </TransactionSpec>\r\n        <TransactionSpec type='price'> \r\n          {this.countPlnValue()} PLN \r\n        </TransactionSpec>\r\n\r\n      </TransactionWrapper>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  plnRate: state.plnRate,\r\n  deleteModeOn: state.deleteModeOn,\r\n  idTable: state.idTable\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addTransactionIdToDelete: id => dispatch(addTransactionIdToDelete(id)),\r\n  deleteTransactionIdFromTable: id => dispatch(deleteTransactionIdFromTable(id))\r\n})\r\n\r\nexport const Transaction = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TransactionPure)","import glamorous from 'glamorous';\r\nimport * as color from '../../../Utilities/colors'\r\n\r\nexport const AddingFormWrapper = glamorous.form(props => {\r\n  return {\r\n    overflow: 'hidden',\r\n    height: '45%',\r\n    width: '20%', \r\n    position: 'absolute',\r\n    zIndex: 999,\r\n    left: '40%', \r\n    marginTop: props.isModalOpen ? 0 : '-50%',\r\n    transition: '.75s',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-around',\r\n    alignItems: 'center',\r\n    fontSize: 20,\r\n    borderRadius: '5px', \r\n    border: `1px solid ${color.BrightWhiteColor}`,\r\n    background: color.DarkBlueColor,\r\n    color: color.BrightWhiteColor\r\n  }\r\n})\r\n\r\nexport const FromTextarea = glamorous.textarea({\r\n  height: '20%',\r\n  maxHeight: '60%',\r\n  width: '60%',\r\n  maxWidth: '90%',\r\n  padding: '20px',\r\n  fontSize: '20px',\r\n  color: color.BrightWhiteColor,\r\n  border: `1px solid ${color.BrightWhiteColor}`,\r\n  borderRadius: '10px',\r\n  boxShadow:'2px 2px 5px rgba(0,0,0,0.5),inset 5px 5px 8px rgba(0,0,0,0.5)',\r\n  background: color.TransparentBrightColor,\r\n  outline: 'none'\r\n})\r\n\r\nexport const FormInput = glamorous.input(props => {\r\n  return {\r\n    height: '30px',\r\n    width: props.type === 'name' ? '35%': '100px',\r\n    background: 'transparent',\r\n    color: color.BrightWhiteColor,\r\n    fontWeight: 'bold', \r\n    outline: 'none',\r\n    margin: '0 10px',\r\n    padding: '0 20px',\r\n    transition: '.3s',\r\n    border: 'none',\r\n    borderBottom: `1px solid ${color.BrightWhiteColor}`,\r\n\r\n    ':focus': {\r\n      border: `1px solid ${color.BrightWhiteColor}`,\r\n      borderRadius: '50px'\r\n    }\r\n  }\r\n})\r\n\r\nexport const ButtonsWrapper = glamorous.div({\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'center',\r\n  width: '325px'\r\n})","export const setDate = () => {\r\n  let newDate = new Date()\r\n  let dayOfTheWeek = getDay()\r\n  const day = () => {\r\n    return newDate.getDate() > 9 ? newDate.getDate() : '0' + newDate.getDate()\r\n  }\r\n  let month = newDate.getMonth() + 1\r\n  let year = newDate.getFullYear()\r\n\r\n  let today = dayOfTheWeek + '. ' + day() + '.0'+ month + '.' + year\r\n\r\n  return today\r\n}\r\n\r\nconst getDay = () => {\r\n  let today = new Date().getDay()\r\n\r\n  switch(today) {\r\n    case 0:\r\n      return 'Sun'\r\n    case 1:\r\n      return 'Mon'\r\n    case 2:\r\n      return 'Tue'\r\n    case 3:\r\n      return 'Wed'\r\n    case 4:\r\n      return 'Thu'\r\n    case 5:\r\n      return 'Fri'\r\n    case 6  :\r\n      return 'Sat'\r\n    default: \r\n      return\r\n  }\r\n}","import React,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n  AddingFormWrapper, \r\n  FormInput, \r\n  FromTextarea,\r\n  ButtonsWrapper,} from './addingForm.s';\r\nimport * as LocalStorage from '../../../localStorage/localStorageHandler';\r\nimport * as date from '../../../Utilities/dateHandler';\r\nimport {addTransactionToStore,toogleModal} from '../../../Utilities/actions/currencyActionList'\r\nimport {Button} from '../../header/buttons/buttons.s'\r\n\r\nexport class AddingFormPure extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      transactionName: '',\r\n      transactionValue: null,\r\n      transactionDate: '',\r\n   }\r\n  }\r\n\r\n  setTransactionName(event) {\r\n    this.setState({transactionName: event.target.value})\r\n  }\r\n\r\n  setTransactionValue(event) {\r\n    let value = Number(event.target.value)\r\n    if (typeof value === \"number\") {\r\n      this.setState({transactionValue: value})\r\n    }\r\n  } \r\n\r\n  setTransactionDate() {\r\n    this.setState({transactionDate: date.setDate()})\r\n  }\r\n\r\n  addTransaction(event) {\r\n    event.preventDefault();\r\n    \r\n    if(this.state.transactionName && this.state.transactionValue) {\r\n      LocalStorage.addTransactionToStorage(\r\n        this.state.transactionName,\r\n        this.state.transactionValue.toFixed(2),\r\n        this.state.transactionDate\r\n      )\r\n    }\r\n    this.props.addTransactionToStore(LocalStorage.getTransactionsFromStorage())\r\n    this.props.toogleModal();\r\n  }\r\n\r\n  closeModal(event) {\r\n    event.preventDefault()\r\n    this.props.toogleModal()\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setTransactionDate()\r\n  }\r\n\r\n  render() {\r\n    return(\r\n        <AddingFormWrapper isModalOpen={this.props.isModalOpen}>\r\n            Transaction name\r\n            <FromTextarea\r\n              type='name' \r\n              onChange={(event) => this.setTransactionName(event)}\r\n            />\r\n            <div>\r\n              Value\r\n              <FormInput \r\n                placeholder='EUR'\r\n                onChange={(event) => this.setTransactionValue(event)} \r\n              /> \r\n            </div>\r\n            <ButtonsWrapper>\r\n              <Button \r\n                onClick={(event) => this.addTransaction(event)}\r\n              > \r\n                add\r\n              </Button>\r\n              <Button\r\n                onClick={(event) => this.closeModal(event)}\r\n              > \r\n                cancel\r\n              </Button>\r\n            </ButtonsWrapper>\r\n          </AddingFormWrapper>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  transactions: state.transactions,\r\n  isModalOpen: state.isModalOpen\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addTransactionToStore: transactions => dispatch(addTransactionToStore(transactions)),\r\n  toogleModal: isModalOpen => dispatch(toogleModal(isModalOpen))\r\n})\r\n\r\nexport const AddingForm = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AddingFormPure)","import glamorous from 'glamorous';\r\nimport * as color from '../../../Utilities/colors'\r\n\r\nexport const HeaderCategoriesWrapper = glamorous.div({\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  marginBottom: '5px',\r\n  height: '50px',\r\n  width: '100%',\r\n  background: color.TransparentDarkBlue,\r\n  color: color.BrightWhiteColor\r\n})\r\n\r\nexport const TransactionCategory = glamorous.div(props => {\r\n  return {\r\n    display: 'flex',\r\n    justifyContent:  props.type === 'price' ? 'flex-end' : 'flex-start',\r\n    alignItems: 'center',\r\n    padding: '0 20px',\r\n    width: props.longer === true ? '40%' : '14%',\r\n    overflow: 'hidden'\r\n  }\r\n})","import React, {Component} from 'react';\r\nimport { HeaderCategoriesWrapper, TransactionCategory } from './HeaderCategories.s';\r\n\r\nexport class ListHeader extends Component {\r\n  render() {\r\n    return(\r\n      <HeaderCategoriesWrapper>\r\n        <TransactionCategory>\r\n          Date\r\n        </TransactionCategory>\r\n        <TransactionCategory longer={true}>\r\n          Transaction name\r\n        </TransactionCategory>\r\n        <TransactionCategory type='price'>\r\n          EUR\r\n        </TransactionCategory>\r\n        <TransactionCategory type='price'>\r\n          PLN \r\n        </TransactionCategory>\r\n      </HeaderCategoriesWrapper>\r\n    )\r\n  }\r\n}","import React,{Component} from 'react';\r\nimport {TransactionsListWrapper, \r\n        Transactions,\r\n        TransactionsSum,\r\n        SumWrapper,\r\n        ModalBackground} from './transactionsList.s';\r\nimport { connect } from 'react-redux';\r\nimport { Transaction } from './transaction/transaction';\r\nimport { AddingForm } from './addingForm/addingForm';\r\nimport { ListHeader } from './HeaderCategories/HeaderCategories';\r\nimport { toogleModal } from '../../Utilities/actions/currencyActionList'\r\n\r\n\r\nexport class TransactionsListPure extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      transactionName: '',\r\n      transactionValue: null,\r\n      transactions: [],\r\n    }\r\n  }\r\n\r\n  renderTransactions() {\r\n    return this.props.transactions && \r\n      this.props.transactions.map((transaction,key) => \r\n        <Transaction transaction={transaction} key={key} />              \r\n      )    \r\n  }\r\n\r\n  sumTransactionsValue() {\r\n    var transactions = this.props.transactions\r\n    var sum = 0;\r\n\r\n    for (let i=0;i<transactions.length;i++) {\r\n      sum += Number(transactions[i].euroValue)\r\n    }\r\n\r\n    return sum   \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <TransactionsListWrapper>\r\n        { this.props.isModalOpen && \r\n          <ModalBackground \r\n            onClick={() => this.props.toogleModal()}\r\n          /> \r\n        }\r\n        <AddingForm />\r\n\r\n        <Transactions>\r\n          <ListHeader />\r\n          { this.renderTransactions() }\r\n        </Transactions>\r\n        <TransactionsSum>\r\n          <SumWrapper>\r\n            { this.sumTransactionsValue().toFixed(2) } EUR\r\n          </SumWrapper>\r\n          <SumWrapper>\r\n            { (this.sumTransactionsValue() * this.props.plnRate).toFixed(2) } PLN\r\n          </SumWrapper>\r\n        </TransactionsSum>\r\n      </TransactionsListWrapper>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  plnRate: state.plnRate,\r\n  transactions: state.transactions,\r\n  isModalOpen: state.isModalOpen\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  toogleModal: isModalOpen => dispatch(toogleModal(isModalOpen))\r\n})\r\n\r\nexport const TransactionsList = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TransactionsListPure)","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { ContentWrapper,} from './mainContainer.s';\r\nimport { Header } from '../header/header';\r\nimport { TransactionsList } from '../transactionsList/transactionsList';\r\nimport * as LocalStorage from '../../localStorage/localStorageHandler';\r\nimport {addTransactionToStore}  from '../../Utilities/actions/currencyActionList'\r\n\r\nexport class MainContainerPure extends Component {\r\n\r\n  componentDidMount() {\r\n    LocalStorage.localStorageInit()\r\n    this.props.addTransactionToStore(LocalStorage.getTransactionsFromStorage())\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <ContentWrapper>\r\n        <Header />\r\n        <TransactionsList />\r\n      </ContentWrapper>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  transactions: state.transactions\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addTransactionToStore: transactions => dispatch(addTransactionToStore(transactions))\r\n})\r\n\r\nexport const MainContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MainContainerPure)","import React from 'react';\nimport './App.css';\nimport {MainContainer} from './components/mainContainer/mainContainer'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainContainer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\r\nimport { \r\n  apiLoading, \r\n  plnRate, \r\n  deleteModeOn, \r\n  idTable,\r\n  transactions,\r\n  isModalOpen  } from './currencyReducerList'\r\n\r\nexport const rootReducer = combineReducers({\r\n  apiLoading,\r\n  plnRate,\r\n  deleteModeOn,\r\n  idTable,\r\n  transactions,\r\n  isModalOpen\r\n})","import {\r\n  IS_API_LOADING,\r\n  SET_PLN_RATE, \r\n  SWITCH_DELETE_MODE,\r\n  ADD_TRANSACTION_ID_TO_DELETE,\r\n  DELETE_TRANSACTION_ID_FROM_TABLE,\r\n  CLEAR_ID_TABLE,\r\n  ADD_TRANSACTION_TO_STORE,\r\n  TOOGLE_MODAL} from '../actions/currencyActionList'\r\n\r\n  export const plnRate = ( state = 0, action ) => {\r\n    switch (action.type) {\r\n      case SET_PLN_RATE:\r\n        return action.plnRate\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n  export const apiLoading = ( state = false, action ) => {\r\n    switch (action.type) {\r\n      case IS_API_LOADING:\r\n        return !state\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n  export const deleteModeOn = ( state = false, action ) => {\r\n    switch (action.type) {\r\n      case SWITCH_DELETE_MODE:\r\n        return !state\r\n      default: \r\n        return state\r\n    }\r\n  }\r\n\r\n  export const idTable = ( state = [], action ) => {\r\n    switch (action.type) {\r\n      case ADD_TRANSACTION_ID_TO_DELETE:\r\n        return [...state, action.id]\r\n      case DELETE_TRANSACTION_ID_FROM_TABLE:\r\n        return state.filter(id => id !== action.id)\r\n      case CLEAR_ID_TABLE: \r\n        return state.filter(id => !id)\r\n      default: \r\n        return state\r\n    }\r\n  }\r\n\r\n  export const transactions = ( state = [], action ) => {\r\n    switch (action.type) {\r\n      case ADD_TRANSACTION_TO_STORE:\r\n        return action.transactions\r\n      default: \r\n        return state\r\n    }\r\n  }\r\n\r\n  export const isModalOpen = ( state = false, action ) => {\r\n    switch (action.type) {\r\n      case TOOGLE_MODAL:\r\n        return !state\r\n      default:\r\n        return state\r\n    }\r\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux'\nimport { rootReducer } from './Utilities/reducers/rootReducers'\n\nconst store = createStore( rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n )\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}